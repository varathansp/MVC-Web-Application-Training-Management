@model IEnumerable<PleaseStayWithUs.Data_Access_Layer.Request>
@{
    ViewBag.Title = "ViewRequests";
    Layout = "~/Views/Shared/_ManagerTemplate2.cshtml";

    var grid = new WebGrid(canPage: true, rowsPerPage: 5);
    grid.Bind(source: Model, rowCount: ViewBag.TotalRows, autoSortAndPage: false);
}

@*<h2 align="center">ViewRequests</h2>*@

<p>
    @* @Html.ActionLink("Create New", "Create")*@
</p>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <script>
        $(function () {
            try
            {
                var dir = $('#dir').val();
                var col = $('#col').val();
                var header = $("th a[href=" + col + "] ");
                if(dir=="Ascending"){
                    header.text(header.text()+"3")
                }
                if (dir == "Descending") {
                    header.text(header.text() - "2"); }
            }

            catch (e)
            { }
        })
    </script>

</head>
<body>
    <div class="container">
        <h2 align="center">Request List</h2>
        <div>@ViewData["exception"]</div>
            <div class="container-fluid">
                <div class="navbar-header">
                    <a href="#" class="navbar-brand"></a>
                </div>
               
            </div>
        
        <div>@ViewData["exception"]</div>
        <div>
            @grid.Table(
tableStyle: "table table-responsive table-bordered",
columns: grid.Columns(
grid.Column(columnName: "RequestID", header: "Request ID",canSort:false, format: @<text>@item.RequestId</text>),
grid.Column(columnName: "EmployeeID", header: "Employee ID", canSort: false),
grid.Column(columnName: "CourseID", header: "Course ID", canSort: false),
grid.Column(columnName: "StartDate", header: "Start Date", canSort: false,format: @<text>@item.StartDate.ToString("MM-dd-yyyy")</text>),
grid.Column(columnName: "EndDate", header: "End Date", canSort: false, format: @<text>@item.EndDate.ToString("MM-dd-yyyy")</text>),
grid.Column(columnName: "Session", header: "Session", canSort: false),
grid.Column(columnName: "CourseName", header: "Course Name", canSort: false),
grid.Column(columnName: "Status", header: "Status", canSort: false),
grid.Column(columnName: "Reason", header: "Reason", canSort: false),

grid.Column(header: "Accept", format: @<text>@Html.ActionLink("Accept", "AcceptRequest", new { id = item.RequestId, text = "Accept" }) </text> ),
grid.Column(header: "Reject", format: @<text>@Html.ActionLink("Reject", "RejectRequest", new { id = item.RequestId, text = "Reject" }) </text> )


    ))




            <div class="row">
                <div class="col-sm-6">
                    @grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-small pagination-right")
                </div>

            </div>
            @Html.Hidden("dir", grid.SortDirection)
            @Html.Hidden("col", grid.SortColumn)
        </div>
    </div>
</body>
</html>




